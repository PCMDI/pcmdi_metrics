name: CI/CD Build Workflow

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  check-jobs-to-skip:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: true
          paths_ignore: '["**/README.md", "**/docs/**", "**/ISSUE_TEMPLATE/**", "**/pull_request_template.md", "**/.vscode/**"]'

  pre-commit-hooks:
    needs: check-jobs-to-skip
    if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true'}} || ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install and Run Pre-commit
        uses: pre-commit/action@v3.0.0

  build:
    needs: check-jobs-to-skip
    if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true'}} || ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: "pcmdi_metrics_dev"
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          mamba-version: "*"
          channel-priority: strict
          auto-update-conda: true

      # Used for refreshing the cache every 24 hours to avoid inconsistencies of package
      # versions between the CI pipeline and local installations.
      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Conda
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ runner.os }}--${{ runner.arch }}--${{
            steps.get-date.outputs.today }}-${{
            hashFiles('conda-env/dev.yml') }}-${{ env.CACHE_NUMBER}}
        env:
          # Increase this value to reset cache if conda/dev.yml has not changed in the workflow
          CACHE_NUMBER: 0

      - name: Update environment
        run:
          mamba env update -n pcmdi_metrics_dev -f conda-env/dev.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install pcmdi_metrics
        # Source: https://github.com/conda/conda-build/issues/4251#issuecomment-1053460542
        run: |
            python -m pip install --no-build-isolation --no-deps -e .

      - name: Run Tests
        run: |
          pytest
