version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat --depth=1
      ls workspace/cdat
      # following will install miniconda3 under $WORKDIR/miniconda/bin
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &create_conda_env
    name: create_conda_env
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -y -q conda
       conda config --set anaconda_upload no
       conda create -q -n py2 -c cdat/label/nightly -c conda-forge -c cdat -c pcmdi vcs vcsaddons mesalib cia testsrunner "proj4<5" "python<3"
       conda create -q -n py3 -c cdat/label/nightly -c conda-forge -c cdat -c pcmdi vcs vcsaddons mesalib cia testsrunner "proj4<5" "python>3"

  - &setup_pmp
    name: setup_pmp
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       source activate py2
       python setup.py install
       source activate py3
       python setup.py install

  - &run_pmp_tests
    name: run_pmp_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       export UVCDAT_SETUP_PATH=${HOME}
       source activate py2
       python run_tests.py -H -v2
       RESULT=$?
       echo "py2 test command exit result:",$RESULT
       source activate py3
       python run_tests.py -H -v2
       RESULT=$(( $RESULT + $? ))
       cd ..
       echo "py3 test command exit result:",$RESULT

  - &conda_upload
    name: conda_upload
    command: |
       export PATH=${HOME}/project/$WORKDIR/miniconda/bin:$PATH
       mkdir conda-bld
       cd conda-bld
       conda install conda-build anaconda-client
       conda config --set anaconda_upload no
       export CONDA_BLD_PATH=`pwd`/build_conda
       mkdir build_conda
       git clone git://github.com/cdat/conda-recipes
       cd conda-recipes
       rm -rf cdp
       cp -r ../../recipes/pcmdi_metrics .
       python ./prep_for_build.py -l 1.1.2
       conda build pcmdi_metrics -c conda-forge -c cdat -c pcmdi --python=27
       conda build pcmdi_metrics -c conda-forge -c cdat -c pcmdi --python=36
       anaconda -t $CONDA_UPLOAD_TOKEN upload -u pcmdi -l nightly $CONDA_BLD_PATH/$OS/$PKG_NAME-*tar.bz2 --force


jobs:
  deploy_mac:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_pmp"
      OS: "osx-64"
      PKG_NAME: "pcmdi_metrics"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *conda_upload

  deploy_linux:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_pmp"
      OS: "linux-64"
      PKG_NAME: "pcmdi_metrics"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *conda_upload

  macos_pmp:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_pmp"
      OS: "osx-64"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_pmp
      - run: *run_pmp_tests
      - store_artifacts:
          path: tests_html
          destination: tests_html
      - store_artifacts:
          path: tests_png
          destination: tests_png

  linux_pmp:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_pmp"
      OS: "linux-64"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_pmp
      - run: *run_pmp_tests
      - store_artifacts:
          path: tests_html
          destination: tests_html
      - store_artifacts:
          path: tests_png
          destination: tests_png

workflows:
  version: 2
  nightly:
    jobs:
      - macos_pmp
      - deploy_mac:
          filters:
            branches:
              only: master
          requires:
            - macos_pmp
      - linux_pmp
      - deploy_linux:
          filters:
            branches:
              only: master
          requires:
            - linux_pmp
